{"version":3,"sources":["webpack://FPClient/webpack/bootstrap","webpack://FPClient/./src/FPConfig.js","webpack://FPClient/./src/FPEvent.js","webpack://FPClient/./node_modules/node-libs-browser/node_modules/buffer/index.js","webpack://FPClient/./src/FPProcessor.js","webpack://FPClient/./src/FPCallback.js","webpack://FPClient/./src/FPPackage.js","webpack://FPClient/./src/FPSocket.js","webpack://FPClient/./node_modules/isarray/index.js","webpack://FPClient/./node_modules/ieee754/index.js","webpack://FPClient/./node_modules/base64-js/index.js","webpack://FPClient/(webpack)/buildin/global.js","webpack://FPClient/./src/FPClient.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Buffer","ERROR_CODE","FPNN_EC_PROTO_UNKNOWN_ERROR","FPNN_EC_PROTO_NOT_SUPPORTED","FPNN_EC_PROTO_INVALID_PACKAGE","FPNN_EC_PROTO_JSON_CONVERT","FPNN_EC_PROTO_STRING_KEY","FPNN_EC_PROTO_MAP_VALUE","FPNN_EC_PROTO_METHOD_TYPE","FPNN_EC_PROTO_PROTO_TYPE","FPNN_EC_PROTO_KEY_NOT_FOUND","FPNN_EC_PROTO_TYPE_CONVERT","FPNN_EC_CORE_UNKNOWN_ERROR","FPNN_EC_CORE_CONNECTION_CLOSED","FPNN_EC_CORE_TIMEOUT","FPNN_EC_CORE_UNKNOWN_METHOD","FPNN_EC_CORE_ENCODING","FPNN_EC_CORE_DECODING","FPNN_EC_CORE_SEND_ERROR","FPNN_EC_CORE_RECV_ERROR","FPNN_EC_CORE_INVALID_PACKAGE","FPNN_EC_CORE_HTTP_ERROR","FPNN_EC_CORE_WORK_QUEUE_FULL","FPNN_EC_CORE_INVALID_CONNECTION","FPNN_EC_CORE_FORBIDDEN","FPNN_EC_CORE_SERVER_STOPPING","FPNN_VERSION","from","FP_FLAG","FP_MESSAGE_TYPE","TCP_MAGIC","HTTP_MAGIC","CRYPTO_CURVES","CRYPTO_ALGORITHM","FPConfig","FPEvent","target","Error","events","on","t","cb","indexOf","push","emit","arguments","length","list","args","j","apply","removeEvent","index","splice","listenerCount","global","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","this","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","type","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","e","typedArraySupport","poolSize","_augment","Symbol","species","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","join","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","FPProcessor","_classCallCheck","assign","method","payload","FPCallback","_cbMap","_exMap","self","setInterval","key","Date","now","delayExec","ex","CHECK_CBS_INTERVAL","timeout","SEND_TIMEOUT","setTimeout","cbRemove","FPPackage","options","magic","version","flag","mtype","ss","seq","psize","ctime","wpos","isTwoWay","isOneWay","isMsgPack","isJson","enCodeOneway","enCodeTwoway","isAnswer","enCodeAnswer","buildHeader","mbuf","pbuf","peek","peekHead","deCodeOneWay","deCodeTwoWay","deCodeAnswer","isHTTP","isTCP","FPSocket","_endpoint","endpoint","_connectionTimeout","connectionTimeout","_client","_isConnect","_connecting","_timoutID","arrayBuffer","send","err","onClose","isConnecting","isOpen","WebSocket","onError","binaryType","onopen","evt","onmessage","chunk","onclose","onerror","clearTimeout","close","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","b64","placeHoldersCount","tmp","placeHolders","Arr","L","revLookup","uint8","extraBytes","output","parts","len2","encodeChunk","lookup","num","g","Function","eval","window","FPClient","_buffer","_autoReconnect","autoReconnect","_proxy","proxy","targetEndpoint","_conn","connect","_seq","_wpos","_peekData","READ_BUFFER_LEN","_cbs","removeCb","_pkg","pkgLen","diff","deCode","cbkey","cbKey","execCb","isQuest","_psr","service","exception","sendQuest","hasConnect","open","callback","buildPkgData","addCb","enCode","buildProxyData"],"mappings":"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","file":"fpnn.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","'use strict'\n\nconst Buffer = require('buffer/').Buffer;\n\nconst ERROR_CODE = {\n\tFPNN_EC_PROTO_UNKNOWN_ERROR: 10001,\t\t// 未知错误（协议解析错误）\n\tFPNN_EC_PROTO_NOT_SUPPORTED: 10002,\t\t// 不支持的协议\n\tFPNN_EC_PROTO_INVALID_PACKAGE: 10003,\t// 无效的数据包\n\tFPNN_EC_PROTO_JSON_CONVERT: 10004,\t\t// JSON转换错误\n\tFPNN_EC_PROTO_STRING_KEY: 10005,\t\t// 数据包错误\n\tFPNN_EC_PROTO_MAP_VALUE: 10006,\t\t\t// 数据包错误\n\tFPNN_EC_PROTO_METHOD_TYPE: 10007,\t\t// 请求错误\n\tFPNN_EC_PROTO_PROTO_TYPE: 10008,\t\t// 协议类型错误\n\tFPNN_EC_PROTO_KEY_NOT_FOUND: 10009,\t\t// 数据包错误\n\tFPNN_EC_PROTO_TYPE_CONVERT: 10010,\t\t// 数据包转换错误\n\t\t\t\n\tFPNN_EC_CORE_UNKNOWN_ERROR: 20001,\t\t// 未知错误（业务流程异常中断）\n\tFPNN_EC_CORE_CONNECTION_CLOSED: 20002,\t// 链接已关闭\n\tFPNN_EC_CORE_TIMEOUT: 20003,\t\t\t// 请求超时\n\tFPNN_EC_CORE_UNKNOWN_METHOD: 20004,\t\t// 错误的请求\n\tFPNN_EC_CORE_ENCODING: 20005,\t\t\t// 编码错误\n\tFPNN_EC_CORE_DECODING: 20006,\t\t\t// 解码错误\n\tFPNN_EC_CORE_SEND_ERROR: 20007,\t\t\t// 发送错误\n\tFPNN_EC_CORE_RECV_ERROR: 20008,\t\t\t// 接收错误\n\tFPNN_EC_CORE_INVALID_PACKAGE: 20009,\t// 无效的数据包\n\tFPNN_EC_CORE_HTTP_ERROR: 20010,\t\t\t// HTTP错误\n\tFPNN_EC_CORE_WORK_QUEUE_FULL: 20011,\t// 任务队列满\n\tFPNN_EC_CORE_INVALID_CONNECTION: 20012,\t// 无效的链接\n\tFPNN_EC_CORE_FORBIDDEN: 20013,\t\t\t// 禁止操作\n\tFPNN_EC_CORE_SERVER_STOPPING: 20014\t\t// 服务器即将停止\n};\n\nconst FPNN_VERSION = Buffer.from([0x0, 0x1]);\n\nconst FP_FLAG = Buffer.from([\n\t0x40, //FP_FLAG_JSON\n\t0x80  //FP_FLAG_MSGPACK \n]);\n\nconst FP_MESSAGE_TYPE = Buffer.from([\n\t0x0, //FP_MT_ONEWAY\n\t0x1, //FP_MT_TWOWAY\n\t0x2  //FP_MT_ANSWER\n]);\n\nconst TCP_MAGIC = Buffer.from('FPNN');\nconst HTTP_MAGIC = Buffer.from('POST');\n\nconst CRYPTO_CURVES = [\n\t'secp256k1',\n\t'secp224r1'\n];\n\nconst CRYPTO_ALGORITHM = [\n\t'aes-128-cfb',\n\t'aes-256-cfb'\n];\n\nclass FPConfig{\n\tstatic get ERROR_CODE(){\n\t\treturn ERROR_CODE;\n\t}\n\n\tstatic get FP_FLAG(){\n\t\treturn FP_FLAG;\n\t}\n\n\tstatic get FP_MESSAGE_TYPE(){\n\t\treturn FP_MESSAGE_TYPE;\n\t}\n\n\tstatic get TCP_MAGIC(){\n\t\treturn TCP_MAGIC;\n\t}\n\n\tstatic get HTTP_MAGIC(){\n\t\treturn HTTP_MAGIC;\n\t}\n\n\tstatic get FPNN_VERSION(){\n\t\treturn FPNN_VERSION;\n\t}\n\n\tstatic get READ_BUFFER_LEN(){\n\t\treturn 1024;\n\t}\n\n\tstatic get CHECK_CBS_INTERVAL(){\n\t\treturn 1000;\n\t}\n\n\tstatic get SEND_TIMEOUT(){\n\t\treturn 5000;\n\t}\n\t\n\tstatic get CRYPTO_CURVES(){\n\t\treturn CRYPTO_CURVES;\n\t}\n\n\tstatic get CRYPTO_ALGORITHM(){\n\t\treturn CRYPTO_ALGORITHM;\n\t}\n}\n\nmodule.exports = FPConfig;","'use strict'\n\nclass FPEvent{\n    static assign(target){\n        if (!target || target.hasOwnProperty('events')){\n            throw new Error(target + ' is null or hasOwnProperty [ events ]');\n        }\n\n        if (target.hasOwnProperty('on') || target.hasOwnProperty('emit') || target.hasOwnProperty('removeEvent')){\n            throw new Error(target + ' hasOwnProperty [ on | emit | removeEvent | listenerCount]');\n        }\n\n        target.events = {};\n\n        target.on = function(t, cb){\n            if (!target.events.hasOwnProperty(t)){\n                target.events[t] = [];\n            }\n    \n            if (target.events[t].indexOf(cb) == -1){\n                target.events[t].push(cb);\n            }\n        };\n\n        target.emit = function(){\n            if (arguments.length == 0){\n                return;\n            }\n\n            let list = target.events[arguments[0]] || [];\n\n            for (let i = 0; i < list.length; i++){\n                let cb = list[i];\n                if (cb){\n                    let args = [];\n                    for (let j = 1; j < arguments.length; j++){\n                        args[j - 1] = arguments[j];\n                    }\n                    cb.apply(target, args);\n                }\n            }\n        };\n\n        target.removeEvent = function(){\n            if (arguments.length == 0){\n                target.events = {};\n                return;\n            }\n\n            if (arguments.length == 1){\n                let t = arguments[0];\n                if (target.events.hasOwnProperty(t)){\n                    delete target.events[t];\n                }\n                return;\n            }\n\n            let t = arguments[0];\n            let index = target.events[t].indexOf(arguments[1]);\n\n            if (index > -1){\n                target.events[t].splice(index, 1);\n            }\n        };\n\n        target.listenerCount = function(t){\n            if (target.events.hasOwnProperty(t)){\n                let list = target.events[t] || [];\n                return list.length;\n            }\n\n            return 0;\n        };\n    }\n}\n\nmodule.exports = FPEvent;","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nconst FPEvent = require('./FPEvent');\n\nclass FPProcessor{\n    constructor(){\n        FPEvent.assign(this);\n    }\n\n    service(data, cb){\n        this.emit(data.method, data.payload, cb);\n    }\n}\n\nmodule.exports = FPProcessor;","'use strict'\n\nconst FPConfig = require('./FPConfig');\n\nclass FPCallback{\n    constructor(){\n        this._cbMap = {};\n        this._exMap = {};\n\n        checkExpire.call(this);\n    }\n\n    addCb(key, cb, timeout){\n        if (!this._cbMap.hasOwnProperty(key)){\n            this._cbMap[key] = cb;\n        } \n\n        if (!timeout){\n            timeout = FPConfig.SEND_TIMEOUT;\n        }\n\n        this._exMap[key] = timeout + Date.now();\n    }\n\n    removeCb(key){\n        if (key){\n            delayRemove.call(this, key);\n            return;\n        }\n\n        for (let key in this._cbMap){\n            delayExec.call(this, key, { code:FPConfig.ERROR_CODE.FPNN_EC_CORE_TIMEOUT, ex:'FPNN_EC_CORE_TIMEOUT' });\n        }\n    }\n\n    execCb(key, data){\n        delayExec.call(this, key, data);\n    }\n}\n\nfunction checkExpire(){\n    let self = this;\n    setInterval(function(){\n        for (let key in self._exMap){\n            if (self._exMap[key] > Date.now()){\n                continue;\n            } \n            delayExec.call(self, key, { code:FPConfig.ERROR_CODE.FPNN_EC_CORE_TIMEOUT, ex:'FPNN_EC_CORE_TIMEOUT' });\n        }\n    }, FPConfig.CHECK_CBS_INTERVAL);\n}\n\nfunction delayExec(key, data){\n    let self = this;\n    setTimeout(function(){\n        cbExec.call(self, key, data);\n    }, 0);\n}\n\nfunction cbExec(key, data){\n    if (this._cbMap.hasOwnProperty(key)){\n        this._cbMap[key](data);\n        cbRemove.call(this, key);\n    }\n}\n\nfunction delayRemove(key){\n    let self = this;\n    setTimeout(function(){\n        cbRemove.call(self, key);\n    }, 0);\n}\n\nfunction cbRemove(key){\n    if (this._cbMap.hasOwnProperty(key)){\n        delete this._cbMap[key];\n    }\n\n    if (this._exMap.hasOwnProperty(key)){\n        delete this._exMap[key];\n    } \n}\n\nmodule.exports = FPCallback","'use strict'\n\nconst Buffer = require('buffer/').Buffer;\nconst FPConfig = require('./FPConfig');\n\nclass FPPackage{\n    constructor(){}\n\n    buildPkgData(options){\n        let data = {};\n\n        data.magic = options ? options.magic : FPConfig.TCP_MAGIC;\n        data.version = options ? options.version : 0;\n        data.flag = options ? options.flag : 0;\n        data.mtype = options ? options.mtype : 0;\n        data.ss = options ? options.ss : 0;\n        data.method = options ? options.method : null;\n        data.seq = options ? options.seq : 0;\n        data.payload = options ? options.payload : null;\n\n        if (data.payload){\n            data.psize = Buffer.byteLength(data.payload);\n        }\n\n        if (data.method){\n            data.ss = Buffer.byteLength(data.method);\n        }\n\n        data.ctime = timestamp.call(this);\n        data.wpos = 0;\n\n        return data;\n    }\n\n    cbKey(data){\n        return data.magic + '_' + data.seq;\n    }\n\n    isHTTP(data){\n        return FPConfig.HTTP_MAGIC.equals(data.magic);\n    }\n\n    isTCP(data){\n        return FPConfig.TCP_MAGIC.equals(data.magic);\n    }\n\n    isMsgPack(data){\n        return 1 == data.flag;\n    }\n\n    isJson(data){\n        return 0 == data.flag;    \n    }\n\n    isOneWay(data){\n        return 0 == data.mtype;\n    }\n\n    isTwoWay(data){\n        return 1 == data.mtype;\n    }\n\n    isQuest(data){\n        return this.isTwoWay(data) || this.isOneWay(data);\n    }\n\n    isAnswer(data){\n        return 2 == data.mtype;\n    }\n\n    isSupportPack(data){\n        return this.isMsgPack(data) != this.isJson(data);\n    }\n\n    enCode(data){\n        let buf = null;\n\n        if (this.isOneWay(data)){\n            buf = this.enCodeOneway(data);\n        }\n        if (this.isTwoWay(data)){\n            buf = this.enCodeTwoway(data);\n        }\n        if (this.isAnswer(data)){\n            buf = this.enCodeAnswer(data);\n        }\n\n        return buf;\n    }\n\n    enCodeOneway(data){\n        let buf = buildHeader.call(this, data, 12 + data.ss + data.psize);\n\n        data.wpos = buf.writeUInt8(data.ss, data.wpos);\n        data.wpos = buf.writeUInt32LE(data.psize, data.wpos);\n\n        let mbuf = Buffer.from(data.method)\n        data.wpos += mbuf.copy(buf, data.wpos, 0);\n\n        if (this.isJson(data)){\n            let pbuf = Buffer.from(data.payload)\n            data.wpos += pbuf.copy(buf, data.wpos, 0);\n        }\n\n        if (this.isMsgPack(data)){\n            this.wpos += this.payload.copy(buf, this.wpos, 0);\n        }\n\n        return buf;\n    }\n\n    enCodeTwoway(data){\n        let buf = buildHeader.call(this, data, 16 + data.ss + data.psize);\n\n        data.wpos = buf.writeUInt8(data.ss, data.wpos);\n        data.wpos = buf.writeUInt32LE(data.psize, data.wpos);\n        data.wpos = buf.writeUInt32LE(data.seq, data.wpos);\n\n        let mbuf = Buffer.from(data.method)\n        data.wpos += mbuf.copy(buf, data.wpos, 0);\n\n        if (this.isJson(data)){\n            let pbuf = Buffer.from(data.payload)\n            data.wpos += pbuf.copy(buf, data.wpos, 0);\n        }\n\n        if (this.isMsgPack(data)){\n            data.wpos += data.payload.copy(buf, data.wpos, 0);\n        }\n\n        return buf; \n    }\n\n    enCodeAnswer(data){\n        let buf = buildHeader.call(this, data, 16 + data.psize);\n\n        data.wpos = buf.writeUInt8(data.ss, data.wpos);\n        data.wpos = buf.writeUInt32LE(data.psize, data.wpos);\n        data.wpos = buf.writeUInt32LE(data.seq, data.wpos);\n\n        if (this.isJson(data)){\n            let pbuf = Buffer.from(data.payload)\n            data.wpos += pbuf.copy(buf, data.wpos, 0);\n        }\n\n        if (this.isMsgPack(data)){\n            data.wpos += data.payload.copy(buf, data.wpos, 0);\n        }\n\n        return buf;\n    }\n\n    peekHead(buf){\n        let peek = {};\n        let pos = 0;\n        let mbuf = Buffer.allocUnsafe(4);\n\n        pos += buf.copy(mbuf, 0, pos, pos + 4);\n        peek.magic = mbuf;\n\n        mbuf = Buffer.allocUnsafe(1);\n        pos += buf.copy(mbuf, 0, pos, pos + 1);\n        peek.version = FPConfig.FPNN_VERSION.indexOf(mbuf);\n\n        pos += buf.copy(mbuf, 0, pos, pos + 1);\n        peek.flag = FPConfig.FP_FLAG.indexOf(mbuf);\n\n        pos += buf.copy(mbuf, 0, pos, pos + 1);\n        peek.mtype = FPConfig.FP_MESSAGE_TYPE.indexOf(mbuf);\n\n        pos += buf.copy(mbuf, 0, pos, pos + 1);\n        peek.ss = mbuf.readUInt8(0);\n\n        peek.psize = buf.readUInt32LE(pos);\n        peek.wpos = pos + 4;\n        \n        return peek;\n    }\n\n    deCode(buf){\n        let data = this.peekHead(buf);\n\n        if (this.isOneWay(data)){\n            this.deCodeOneWay(buf, data);\n        }\n        if (this.isTwoWay(data)){\n            this.deCodeTwoWay(buf, data);\n        }\n        if (this.isAnswer(data)){\n            this.deCodeAnswer(buf, data);\n        }\n\n        return data;\n    }\n\n    deCodeOneWay(buf, data){\n        if (buf.length != 12 + data.ss + data.psize){\n            data = null;\n            return;\n        }\n\n        let mbuf = Buffer.allocUnsafe(data.ss);\n        data.wpos += buf.copy(mbuf, 0, data.wpos, data.wpos + data.ss);\n\n        data.method = mbuf.toString();\n\n        let pbuf = Buffer.allocUnsafe(data.psize);\n        data.wpos += buf.copy(pbuf, 0, data.wpos);\n\n        if (this.isJson(data)){\n            data.payload = pbuf.toString();\n        }\n\n        if (this.isMsgPack(data)){\n            data.payload = pbuf;\n        }\n    }\n\n    deCodeTwoWay(buf, data){\n        if (buf.length != 16 + data.ss + data.psize){\n            data = null;\n            return;\n        }\n\n        data.seq = buf.readUInt32LE(data.wpos);\n        data.wpos += 4;\n\n        let mbuf = Buffer.allocUnsafe(data.ss);\n        data.wpos += buf.copy(mbuf, 0, data.wpos, data.wpos + data.ss);\n\n        data.method = mbuf.toString();\n\n        let pbuf = Buffer.allocUnsafe(data.psize);\n        data.wpos += buf.copy(pbuf, 0, data.wpos);\n\n        if (this.isJson(data)){\n            data.payload = pbuf.toString();\n        }\n\n        if (this.isMsgPack(data)){\n            data.payload = pbuf;\n        }\n    }\n\n    deCodeAnswer(buf, data){\n        if (buf.length != 16 + data.psize){\n            data = null;\n            return;\n        }\n\n        data.seq = buf.readUInt32LE(data.wpos);\n        data.wpos += 4;\n\n        let pbuf = Buffer.allocUnsafe(data.psize);\n        data.wpos += buf.copy(pbuf, 0, data.wpos);\n\n        if (this.isJson(data)){\n            data.payload = pbuf.toString();\n        }\n\n        if (this.isMsgPack(data)){\n            data.payload = pbuf;\n        }\n    }\n}\n\nfunction timestamp(){\n    return Math.floor(Date.now());\n}\n\nfunction isString(src){\n    return '[object String]' == Object.prototype.toString.call(src);\n}\n\nfunction buildHeader(data, size){\n    let buf = Buffer.allocUnsafe(size);\n\n    if (this.isHTTP(data)){\n        data.wpos += FPConfig.HTTP_MAGIC.copy(buf, data.wpos, 0);\n    }\n\n    if (this.isTCP(data)){\n        data.wpos += FPConfig.TCP_MAGIC.copy(buf, data.wpos, 0);\n    }\n\n    data.wpos += FPConfig.FPNN_VERSION.copy(buf, data.wpos, data.version, data.version + 1);\n\n    if (this.isJson(data)){\n        data.wpos += FPConfig.FP_FLAG.copy(buf, data.wpos, data.flag, data.flag + 1);\n    }\n\n    if (this.isMsgPack(data)){\n        data.wpos += FPConfig.FP_FLAG.copy(buf, data.wpos, data.flag, data.flag + 1);\n    }\n\n    data.wpos += FPConfig.FP_MESSAGE_TYPE.copy(buf, data.wpos, data.mtype, data.mtype + 1);\n\n    return buf;\n}\n\nmodule.exports = FPPackage;","'use strict'\n\nconst FPConfig = require('./FPConfig');\nconst FPEvent = require('./FPEvent');\n\nclass FPSocket{\n    constructor(options){\n        FPEvent.assign(this);\n\n        this._endpoint = options ? options.endpoint : null;\n        this._connectionTimeout = options ? options.connectionTimeout : 30 * 1000;\n\n        if (this._connectionTimeout === undefined){\n            this._connectionTimeout = 30 * 1000;\n        }\n\n        this._client = null;\n        this._isConnect = false;\n        this._connecting = false;\n\n        this._timoutID = 0;\n    }\n\n    get endpoint(){ \n        return this._endpoint; \n    }\n\n    write(buf){\n        if (buf){\n            let arrayBuffer = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n            this._client.send(arrayBuffer);\n        }\n    }\n\n    close(err){\n        if (err){\n            this.emit('error', err);\n        }\n        onClose.call(this);\n    }\n\n    open(){\n        if (this.isConnecting || this.isOpen || this._client || !this._endpoint){\n            this.emit('error', { code:FPConfig.ERROR_CODE.FPNN_EC_CORE_INVALID_CONNECTION, ex:'FPNN_EC_CORE_INVALID_CONNECTION' });\n            return;\n        }\n\n        let self = this;\n        this._connecting = true;\n\n        try {\n            this._client = new WebSocket(this._endpoint);\n        } catch (err) {\n            onError.call(self, err);\n            onClose.call(self);\n            return;\n        }\n\n        this._client.binaryType = 'arraybuffer';\n\n        this._timoutID = setTimeout(function(){\n            if (self.isConnecting){\n                onError.call(self, { code:FPConfig.ERROR_CODE.FPNN_EC_CORE_TIMEOUT, ex:'FPNN_EC_CORE_TIMEOUT' }); \n                onClose.call(self);\n            }\n        }, this._connectionTimeout);\n\n        this._client.onopen = function(evt){ \n            onConnect.call(self);\n        };\n          \n        this._client.onmessage = function(evt){\n            onData.call(self, evt.data);\n        };\n          \n        this._client.onclose = function(evt){\n            onClose.call(self);\n        };      \n\n        this._client.onerror = function(evt){\n            onError.call(self, evt);\n        };\n    }\n\n    get isOpen(){\n        return this._isConnect;\n    }\n\n    get isConnecting(){\n        return this._connecting;\n    }\n}\n\nfunction onData(chunk){\n    this.emit('data', chunk);\n}\n\nfunction onConnect(){\n    this._isConnect = true;\n    this._connecting = false;\n\n    this.emit('connect');\n}\n\nfunction onClose(){\n    if (this._timoutID){\n        clearTimeout(this._timoutID);\n        this._timoutID = 0;\n    }\n\n    if (this._client){\n        this._client.close();\n        this._client = null;\n    }\n\n    this._isConnect = false;\n    this._connecting = false;\n\n    this.emit('close');\n}\n\nfunction onError(err){\n    this.emit('error', err);\n}\n\nmodule.exports = FPSocket;","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","'use strict'\n\nconst Buffer = require('buffer/').Buffer;\n\nconst FPConfig = require('./FPConfig');\nconst FPEvent = require('./FPEvent');\nconst FPSocket = require('./FPSocket');\nconst FPPackage = require('./FPPackage');\nconst FPCallback = require('./FPCallback');\nconst FPProcessor = require('./FPProcessor');\n\nclass FPClient{\n    constructor(options){\n        FPEvent.assign(this);\n\n        this._buffer = Buffer.allocUnsafe(16);\n        this._autoReconnect = options ? options.autoReconnect : false;\n        this._proxy = options ? options.proxy : null;\n\n        if (this._proxy){\n            this._proxy.targetEndpoint = options.endpoint;\n            options.endpoint = this._proxy.endpoint;\n        }\n\n        this._conn = new FPSocket(options);\n\n        let self = this;\n        this._conn.on('connect', function(){\n            onConnect.call(self);\n        });\n\n        this._conn.on('close', function(){\n            onClose.call(self);\n        });\n\n        this._conn.on('data', function(chunk){\n            onData.call(self, chunk);\n        });\n\n        this._conn.on('error', function(err){\n            self.emit('error', err);\n        });\n\n        this._pkg = new FPPackage();\n        this._cbs = new FPCallback();\n        this._psr = new FPProcessor();\n\n        this._seq = 0;\n        this._wpos = 0;\n        this._peekData = null;\n\n        this._buffer = Buffer.allocUnsafe(FPConfig.READ_BUFFER_LEN);\n    }\n\n    get processor(){\n        return this._psr;\n    }\n\n    set processor(value){\n        return this._psr = value;\n    }\n\n    connect(){\n        if (this.hasConnect){\n            this._conn.close();\n            return;\n        }\n\n        this._conn.open();\n    }\n\n    sendQuest(options, callback, timeout){\n        if (!this.isOpen){\n            this.emit('error', 'no connect')\n            return;\n        }\n\n        let data = {};\n\n        data.magic = options.magic !== undefined ? options.magic : FPConfig.TCP_MAGIC;\n        data.version = options.version !== undefined ? options.version : 1;\n        data.flag = options.flag !== undefined ? options.flag : 0;\n        data.mtype = options.mtype !== undefined ? options.mtype : 1;\n\n        data.method = options.method;\n        data.seq = (options.seq === undefined) ? ++this._seq : options.seq;\n        data.payload = options.payload;\n\n        data = this._pkg.buildPkgData(data);\n        if (callback) this._cbs.addCb(this._pkg.cbKey(data), callback, timeout);\n\n        let buf = this._pkg.enCode(data);\n\n        if (this._proxy){\n            buf = this._proxy.buildProxyData(buf);\n        }\n\n        this._conn.write(buf);\n    }\n\n    sendNotify(options){\n        if (!this.isOpen){\n            this.emit('error', 'no connect')\n            return;\n        }\n\n        let data = {};\n\n        data.magic = options.magic !== undefined ? options.magic : FPConfig.TCP_MAGIC;\n        data.version = options.version !== undefined ? options.version : 1;\n        data.flag = options.flag !== undefined ? options.flag : 0;\n        data.mtype = options.mtype !== undefined ? options.mtype : 0;\n\n        data.method = options.method;\n        data.payload = options.payload;\n\n        data = this._pkg.buildPkgData(data);\n        let buf = this._pkg.enCode(data);\n\n        if (this._proxy){\n            buf = this._proxy.buildProxyData(buf);\n        }\n\n        this._conn.write(buf);\n    }\n\n    close(){\n        this._conn.close();\n    }\n\n    get isOpen(){\n        return this._conn.isOpen;\n    }\n\n    get hasConnect(){\n        return this._conn.isOpen || this._conn.isConnecting;\n    }\n}\n\nfunction onConnect(){\n    this.emit('connect');\n}\n\nfunction onClose(){\n    if (this._autoReconnect){\n        let self = this;\n        setTimeout(function(){\n            self.connect();\n        }, FPConfig.SEND_TIMEOUT);\n    }\n\n    this._seq = 0;\n    this._wpos = 0;\n    this._peekData = null;\n\n    this._buffer = Buffer.allocUnsafe(FPConfig.READ_BUFFER_LEN);\n    this._cbs.removeCb();\n\n    this.emit('close');\n}\n\nfunction onData(chunk){\n    chunk = Buffer.from(chunk);\n\n    if (this._wpos + chunk.length > this._buffer.length){\n        let buf = Buffer.allocUnsafe(this._wpos + chunk.length);\n        this._buffer.copy(buf, 0, 0, this._wpos);\n        this._buffer = buf;\n    }\n\n    this._wpos += chunk.copy(this._buffer, this._wpos, 0);\n\n    if (!this._peekData){\n\n        this._peekData = peekHead.call(this, this._buffer);\n\n        if (!this._peekData){\n            this._conn.close({ code:FPConfig.ERROR_CODE.FPNN_EC_CORE_CONNECTION_CLOSED, ex:'FPNN_EC_CORE_CONNECTION_CLOSED' });\n            return;\n        }\n    }\n\n    let diff = this._wpos - this._peekData.pkgLen;\n    if (diff >= 0){\n        let mbuf = Buffer.allocUnsafe(this._peekData.pkgLen);\n        this._buffer.copy(mbuf, 0, 0, this._peekData.pkgLen);\n\n        let len = Math.max(2 * (this._wpos - this._peekData.pkgLen), FPConfig.READ_BUFFER_LEN);\n        let buf = Buffer.allocUnsafe(len);\n        this._wpos = this._buffer.copy(buf, 0, this._peekData.pkgLen, this._peekData.pkgLen + diff);\n        this._buffer = buf;\n\n        delete this._peekData;\n        this._peekData = null;\n\n        let data = this._pkg.deCode(mbuf);\n\n        if (this._pkg.isAnswer(data)){\n            let cbkey = this._pkg.cbKey(data);\n            this._cbs.execCb(cbkey, data);\n        }\n\n        if (this._pkg.isQuest(data)){\n            let self = this;\n            this._psr.service(data, function(payload, exception){\n                sendAnswer.call(self, data.flag, data.seq, payload, exception);\n            });\n        }\n    }\n}\n\nfunction sendAnswer(flag, seq, payload, exception){\n    if (exception === undefined){\n        exception = false;\n    }\n\n    let options = {\n        flag: flag,\n        mtype: 2,\n        seq: seq,\n        ss: exception ? 1 : 0,\n        payload: payload,\n    };\n\n    this.sendQuest(options);\n}\n\nfunction peekHead(buf){\n    let data = null;\n\n    if (buf.length >= 12){\n        data = this._pkg.peekHead(buf);\n\n        if (!checkHead.call(this, data)){\n            return null;\n        }\n\n        if (this._pkg.isOneWay(data)){\n            data.pkgLen = 12 + data.ss + data.psize;\n        }\n\n        if (this._pkg.isTwoWay(data)){\n            data.pkgLen = 16 + data.ss + data.psize;\n        }\n\n        if (this._pkg.isAnswer(data)){\n            data.pkgLen = 16 + data.psize;\n        }\n    }\n\n    return data;\n}\n\nfunction checkHead(data){\n    if (!FPConfig.TCP_MAGIC.equals(data.magic) && !FPConfig.HTTP_MAGIC.equals(data.magic)){\n        return false;\n    }\n\n    if (data.version < 0 || data.version >= FPConfig.FPNN_VERSION.length){\n        return false;\n    }\n\n    if (data.flag < 0 || data.flag >= FPConfig.FP_FLAG.length){\n        return false;\n    }\n    \n    if (data.mtype < 0 || data.mtype >= FPConfig.FP_MESSAGE_TYPE.length){\n        return false;\n    }\n\n    return true;\n}\n\nmodule.exports = FPClient;"],"sourceRoot":""}