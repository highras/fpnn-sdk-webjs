{"version":3,"sources":["webpack://FPClient/webpack/bootstrap","webpack://FPClient/./src/fpnn/FPConfig.js","webpack://FPClient/./src/fpnn/FPEvent.js","webpack://FPClient/./src/fpnn/FPProcessor.js","webpack://FPClient/./src/fpnn/FPCallback.js","webpack://FPClient/./src/fpnn/FPPackage.js","webpack://FPClient/./src/fpnn/platform/BrowserImpl.js","webpack://FPClient/./src/fpnn/FPSocket.js","webpack://FPClient/./node_modules/ieee754/index.js","webpack://FPClient/./node_modules/base64-js/index.js","webpack://FPClient/./libs/buffer.js","webpack://FPClient/./src/fpnn/FPClient.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Buffer","ERROR_CODE","FPNN_EC_PROTO_UNKNOWN_ERROR","FPNN_EC_PROTO_NOT_SUPPORTED","FPNN_EC_PROTO_INVALID_PACKAGE","FPNN_EC_PROTO_JSON_CONVERT","FPNN_EC_PROTO_STRING_KEY","FPNN_EC_PROTO_MAP_VALUE","FPNN_EC_PROTO_METHOD_TYPE","FPNN_EC_PROTO_PROTO_TYPE","FPNN_EC_PROTO_KEY_NOT_FOUND","FPNN_EC_PROTO_TYPE_CONVERT","FPNN_EC_CORE_UNKNOWN_ERROR","FPNN_EC_CORE_CONNECTION_CLOSED","FPNN_EC_CORE_TIMEOUT","FPNN_EC_CORE_UNKNOWN_METHOD","FPNN_EC_CORE_ENCODING","FPNN_EC_CORE_DECODING","FPNN_EC_CORE_SEND_ERROR","FPNN_EC_CORE_RECV_ERROR","FPNN_EC_CORE_INVALID_PACKAGE","FPNN_EC_CORE_HTTP_ERROR","FPNN_EC_CORE_WORK_QUEUE_FULL","FPNN_EC_CORE_INVALID_CONNECTION","FPNN_EC_CORE_FORBIDDEN","FPNN_EC_CORE_SERVER_STOPPING","FPNN_VERSION","from","FP_FLAG","FP_MESSAGE_TYPE","TCP_MAGIC","HTTP_MAGIC","CRYPTO_CURVES","CRYPTO_ALGORITHM","FPConfig","FPEvent","target","Error","events","on","t","cb","indexOf","push","emit","arguments","length","list","args","j","apply","removeEvent","index","splice","listenerCount","FPProcessor","_classCallCheck","this","assign","data","method","payload","FPCallback","_cbMap","_exMap","self","setInterval","key","Date","now","delayExec","CHECK_CBS_INTERVAL","timeout","SEND_TIMEOUT","setTimeout","cbRemove","FPPackage","options","magic","version","flag","mtype","ss","seq","psize","BUFFER","byteLength","wpos","equals","isTwoWay","isOneWay","isMsgPack","isJson","enCodeOneway","enCodeTwoway","isAnswer","enCodeAnswer","buf","buildHeader","writeUInt8","writeUInt32LE","mbuf","copy","pbuf","peek","pos","allocUnsafe","readUInt8","readUInt32LE","peekHead","deCodeOneWay","deCodeTwoWay","deCodeAnswer","toString","size","isHTTP","isTCP","BrowserImpl","_socket","endpoint","WebSocket","err","binaryType","onopen","evt","onmessage","onclose","onerror","send","close","readyState","OPEN","CONNECTING","PlatFormImpl","FPSocket","_endpoint","_connectionTimeout","connectionTimeout","_platform","platformImpl","_writeID","_timeoutID","_queue","clearTimeout","chunk","onClose","arrayBuffer","buffer","slice","byteOffset","isOpen","shift","isConnecting","open","clearInterval","read","offset","isLE","mLen","nBytes","e","eLen","eMax","eBias","nBits","NaN","Infinity","Math","pow","write","rt","abs","isNaN","floor","log","LN2","b64","placeHoldersCount","toByteArray","tmp","placeHolders","arr","len","Arr","L","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","output","parts","len2","encodeChunk","lookup","join","Uint8Array","Array","code","start","end","num","base64","ieee754","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","__proto__","arg","encodingOrOffset","TypeError","string","encoding","isEncoding","actual","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","array","undefined","fromArrayBuffer","valueOf","b","obj","isBuffer","checked","numberIsNaN","type","isArray","fromObject","Symbol","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","utf8Slice","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","foo","typedArraySupport","console","error","species","writable","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","toLocaleString","inspect","max","replace","trim","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt16LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt16LE","writeUInt16BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","leadSurrogate","split","base64clean","src","dst","constructor","FPClient","_autoReconnect","autoReconnect","_proxy","proxy","targetEndpoint","_conn","_reconnectID","_wpos","_buffer","resizeBuffer","READ_BUFFER_LEN","_readID","_peekData","_pkg","pkgLen","conn","diff","deCode","cbkey","cbKey","_cbs","execCb","isQuest","_psr","service","exception","sendQuest","onError","_seq","hasConnect","callback","buildPkgData","addCb","enCode","buildProxyData","destroy","removeCb","connect","len1"],"mappings":"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","file":"fpnn.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","'use strict'\n\nconst Buffer = require('../../libs/buffer').Buffer;\n\nconst ERROR_CODE = {\n\tFPNN_EC_PROTO_UNKNOWN_ERROR: 10001,\t\t// 未知错误（协议解析错误）\n\tFPNN_EC_PROTO_NOT_SUPPORTED: 10002,\t\t// 不支持的协议\n\tFPNN_EC_PROTO_INVALID_PACKAGE: 10003,\t// 无效的数据包\n\tFPNN_EC_PROTO_JSON_CONVERT: 10004,\t\t// JSON转换错误\n\tFPNN_EC_PROTO_STRING_KEY: 10005,\t\t// 数据包错误\n\tFPNN_EC_PROTO_MAP_VALUE: 10006,\t\t\t// 数据包错误\n\tFPNN_EC_PROTO_METHOD_TYPE: 10007,\t\t// 请求错误\n\tFPNN_EC_PROTO_PROTO_TYPE: 10008,\t\t// 协议类型错误\n\tFPNN_EC_PROTO_KEY_NOT_FOUND: 10009,\t\t// 数据包错误\n\tFPNN_EC_PROTO_TYPE_CONVERT: 10010,\t\t// 数据包转换错误\n\t\t\t\n\tFPNN_EC_CORE_UNKNOWN_ERROR: 20001,\t\t// 未知错误（业务流程异常中断）\n\tFPNN_EC_CORE_CONNECTION_CLOSED: 20002,\t// 链接已关闭\n\tFPNN_EC_CORE_TIMEOUT: 20003,\t\t\t// 请求超时\n\tFPNN_EC_CORE_UNKNOWN_METHOD: 20004,\t\t// 错误的请求\n\tFPNN_EC_CORE_ENCODING: 20005,\t\t\t// 编码错误\n\tFPNN_EC_CORE_DECODING: 20006,\t\t\t// 解码错误\n\tFPNN_EC_CORE_SEND_ERROR: 20007,\t\t\t// 发送错误\n\tFPNN_EC_CORE_RECV_ERROR: 20008,\t\t\t// 接收错误\n\tFPNN_EC_CORE_INVALID_PACKAGE: 20009,\t// 无效的数据包\n\tFPNN_EC_CORE_HTTP_ERROR: 20010,\t\t\t// HTTP错误\n\tFPNN_EC_CORE_WORK_QUEUE_FULL: 20011,\t// 任务队列满\n\tFPNN_EC_CORE_INVALID_CONNECTION: 20012,\t// 无效的链接\n\tFPNN_EC_CORE_FORBIDDEN: 20013,\t\t\t// 禁止操作\n\tFPNN_EC_CORE_SERVER_STOPPING: 20014\t\t// 服务器即将停止\n};\n\nconst FPNN_VERSION = Buffer.from([0x0, 0x1]);\n\nconst FP_FLAG = Buffer.from([\n\t0x40, //FP_FLAG_JSON\n\t0x80  //FP_FLAG_MSGPACK \n]);\n\nconst FP_MESSAGE_TYPE = Buffer.from([\n\t0x0, //FP_MT_ONEWAY\n\t0x1, //FP_MT_TWOWAY\n\t0x2  //FP_MT_ANSWER\n]);\n\nconst TCP_MAGIC = Buffer.from('FPNN');\nconst HTTP_MAGIC = Buffer.from('POST');\n\nconst CRYPTO_CURVES = [\n\t'secp256k1',\n\t'secp224r1'\n];\n\nconst CRYPTO_ALGORITHM = [\n\t'aes-128-cfb',\n\t'aes-256-cfb'\n];\n\nclass FPConfig {\n\n\tstatic get BUFFER() {\n\n\t\treturn Buffer;\n\t}\n\n\tstatic get ERROR_CODE() {\n\n\t\treturn ERROR_CODE;\n\t}\n\n\tstatic get FP_FLAG() {\n\n\t\treturn FP_FLAG;\n\t}\n\n\tstatic get FP_MESSAGE_TYPE() {\n\n\t\treturn FP_MESSAGE_TYPE;\n\t}\n\n\tstatic get TCP_MAGIC() {\n\n\t\treturn TCP_MAGIC;\n\t}\n\n\tstatic get HTTP_MAGIC() {\n\n\t\treturn HTTP_MAGIC;\n\t}\n\n\tstatic get FPNN_VERSION() {\n\n\t\treturn FPNN_VERSION;\n\t}\n\n\tstatic get READ_BUFFER_LEN() {\n\n\t\treturn 1024;\n\t}\n\n\tstatic get CHECK_CBS_INTERVAL() {\n\t\t\n\t\treturn 1000;\n\t}\n\n\tstatic get SEND_TIMEOUT() {\n\n\t\treturn 20 * 1000;\n\t}\n\t\n\tstatic get CRYPTO_CURVES() {\n\n\t\treturn CRYPTO_CURVES;\n\t}\n\n\tstatic get CRYPTO_ALGORITHM() {\n\n\t\treturn CRYPTO_ALGORITHM;\n\t}\n}\n\nmodule.exports = FPConfig;","'use strict'\n\nclass FPEvent {\n\n    static assign(target) {\n\n        if (!target || target.hasOwnProperty('events')) {\n\n            throw new Error(target + ' is null or hasOwnProperty [ events ]');\n        }\n\n        if (target.hasOwnProperty('on') || target.hasOwnProperty('emit') || target.hasOwnProperty('removeEvent')) {\n\n            throw new Error(target + ' hasOwnProperty [ on | emit | removeEvent | listenerCount]');\n        }\n\n        target.events = {};\n\n        target.on = function(t, cb) {\n\n            if (!target.events.hasOwnProperty(t)) {\n                \n                target.events[t] = [];\n            }\n    \n            if (target.events[t].indexOf(cb) == -1) {\n\n                target.events[t].push(cb);\n            }\n        };\n\n        target.emit = function() {\n\n            if (arguments.length == 0) {\n\n                return;\n            }\n\n            let list = target.events[arguments[0]] || [];\n\n            for (let i = 0; i < list.length; i++) {\n\n                let cb = list[i];\n                \n                if (cb) {\n\n                    let args = [];\n\n                    for (let j = 1; j < arguments.length; j++) {\n\n                        args[j - 1] = arguments[j];\n                    }\n\n                    cb.apply(target, args);\n                }\n            }\n        };\n\n        target.removeEvent = function() {\n\n            if (arguments.length == 0) {\n\n                target.events = {};\n                return;\n            }\n\n            if (arguments.length == 1) {\n\n                let t = arguments[0];\n\n                if (target.events.hasOwnProperty(t)) {\n\n                    delete target.events[t];\n                }\n\n                return;\n            }\n\n            let t = arguments[0];\n            let index = target.events[t].indexOf(arguments[1]);\n\n            if (index > -1) {\n\n                target.events[t].splice(index, 1);\n            }\n        };\n\n        target.listenerCount = function(t) {\n            \n            if (target.events.hasOwnProperty(t)) {\n\n                let list = target.events[t] || [];\n                return list.length;\n            }\n\n            return 0;\n        };\n    }\n}\n\nmodule.exports = FPEvent;","'use strict'\n\nconst FPEvent = require('./FPEvent');\n\nclass FPProcessor {\n\n    constructor() {\n\n        FPEvent.assign(this);\n    }\n\n    service(data, cb) {\n\n        this.emit(data.method, data.payload, cb);\n    }\n\n    destroy() {\n\n        this.removeEvent();\n    }\n}\n\nmodule.exports = FPProcessor;","'use strict'\n\nconst FPConfig = require('./FPConfig');\n\nclass FPCallback {\n\n    constructor() {\n\n        this._cbMap = {};\n        this._exMap = {};\n\n        checkExpire.call(this);\n    }\n\n    addCb(key, cb, timeout) {\n\n        if (!this._cbMap.hasOwnProperty(key)) {\n\n            this._cbMap[key] = cb;\n        } \n\n        if (!timeout) {\n\n            timeout = FPConfig.SEND_TIMEOUT;\n        }\n\n        this._exMap[key] = timeout + Date.now();\n    }\n\n    removeCb(key) {\n\n        if (key) {\n\n            delayRemove.call(this, key);\n            return;\n        }\n\n        for (let key in this._cbMap) {\n\n            delayExec.call(this, key, new Error('timeout with closed!'));\n        }\n    }\n\n    execCb(key, data) {\n\n        delayExec.call(this, key, data);\n    }\n}\n\nfunction checkExpire() {\n\n    let self = this;\n\n    setInterval(function() {\n\n        for (let key in self._exMap) {\n\n            if (self._exMap[key] > Date.now()) {\n            \n                continue;\n            } \n\n            delayExec.call(self, key, new Error('timeout with expire'));\n        }\n    }, FPConfig.CHECK_CBS_INTERVAL);\n}\n\nfunction delayExec(key, data) {\n\n    let self = this;\n\n    setTimeout(function() {\n\n        cbExec.call(self, key, data);\n    }, 0);\n}\n\nfunction cbExec(key, data) {\n\n    if (this._cbMap.hasOwnProperty(key)) {\n    \n        let cb = this._cbMap[key];\n        cbRemove.call(this, key);\n        cb && cb(data);\n    }\n}\n\nfunction delayRemove(key) {\n\n    let self = this;\n\n    setTimeout(function() {\n\n        cbRemove.call(self, key);\n    }, 0);\n}\n\nfunction cbRemove(key) {\n\n    if (this._cbMap.hasOwnProperty(key)) {\n\n        delete this._cbMap[key];\n    }\n\n    if (this._exMap.hasOwnProperty(key)) {\n\n        delete this._exMap[key];\n    } \n}\n\nmodule.exports = FPCallback","'use strict'\n\nconst FPConfig = require('./FPConfig');\n\nclass FPPackage {\n\n    constructor() {}\n\n    buildPkgData(options) {\n\n        let data = {};\n\n        data.magic = options.magic || FPConfig.TCP_MAGIC;\n        data.version = options.version || 0;\n        data.flag = options.flag || 0;\n        data.mtype = options.mtype || 0;\n        data.ss = options.ss || 0;\n        data.method = options.method || null;\n        data.seq = options.seq || 0;\n        data.payload = options.payload || null;\n\n        if (data.payload) {\n\n            data.psize = FPConfig.BUFFER.byteLength(data.payload);\n        }\n\n        if (data.method) {\n\n            data.ss = FPConfig.BUFFER.byteLength(data.method);\n        }\n\n        data.wpos = 0;\n        return data;\n    }\n\n    cbKey(data) {\n\n        return data.magic + '_' + data.seq;\n    }\n\n    isHTTP(data) {\n\n        return FPConfig.HTTP_MAGIC.equals(data.magic);\n    }\n\n    isTCP(data) {\n\n        return FPConfig.TCP_MAGIC.equals(data.magic);\n    }\n\n    isMsgPack(data) {\n\n        return 1 == data.flag;\n    }\n\n    isJson(data) {\n\n        return 0 == data.flag;    \n    }\n\n    isOneWay(data) {\n\n        return 0 == data.mtype;\n    }\n\n    isTwoWay(data) {\n\n        return 1 == data.mtype;\n    }\n\n    isQuest(data) {\n\n        return this.isTwoWay(data) || this.isOneWay(data);\n    }\n\n    isAnswer(data) {\n\n        return 2 == data.mtype;\n    }\n\n    isSupportPack(data) {\n\n        return this.isMsgPack(data) != this.isJson(data);\n    }\n\n    enCode(data) {\n        \n        if (this.isOneWay(data)) {\n\n            return this.enCodeOneway(data);\n        }\n\n        if (this.isTwoWay(data)) {\n\n            return this.enCodeTwoway(data);\n        }\n\n        if (this.isAnswer(data)) {\n\n            return this.enCodeAnswer(data);\n        }\n\n        return null;\n    }\n\n    enCodeOneway(data) {\n\n        let buf = buildHeader.call(this, data, 12 + data.ss + data.psize);\n\n        data.wpos = buf.writeUInt8(data.ss, data.wpos);\n        data.wpos = buf.writeUInt32LE(data.psize, data.wpos);\n\n        let mbuf = FPConfig.BUFFER.from(data.method)\n        data.wpos += mbuf.copy(buf, data.wpos, 0);\n\n        if (this.isJson(data)) {\n\n            let pbuf = FPConfig.BUFFER.from(data.payload)\n            data.wpos += pbuf.copy(buf, data.wpos, 0);\n        }\n\n        if (this.isMsgPack(data)) {\n\n            this.wpos += this.payload.copy(buf, this.wpos, 0);\n        }\n\n        return buf;\n    }\n\n    enCodeTwoway(data) {\n\n        let buf = buildHeader.call(this, data, 16 + data.ss + data.psize);\n\n        data.wpos = buf.writeUInt8(data.ss, data.wpos);\n        data.wpos = buf.writeUInt32LE(data.psize, data.wpos);\n        data.wpos = buf.writeUInt32LE(data.seq, data.wpos);\n\n        let mbuf = FPConfig.BUFFER.from(data.method)\n        data.wpos += mbuf.copy(buf, data.wpos, 0);\n\n        if (this.isJson(data)) {\n\n            let pbuf = FPConfig.BUFFER.from(data.payload)\n            data.wpos += pbuf.copy(buf, data.wpos, 0);\n        }\n\n        if (this.isMsgPack(data)) {\n\n            data.wpos += data.payload.copy(buf, data.wpos, 0);\n        }\n\n        return buf; \n    }\n\n    enCodeAnswer(data) {\n\n        let buf = buildHeader.call(this, data, 16 + data.psize);\n\n        data.wpos = buf.writeUInt8(data.ss, data.wpos);\n        data.wpos = buf.writeUInt32LE(data.psize, data.wpos);\n        data.wpos = buf.writeUInt32LE(data.seq, data.wpos);\n\n        if (this.isJson(data)) {\n\n            let pbuf = FPConfig.BUFFER.from(data.payload)\n            data.wpos += pbuf.copy(buf, data.wpos, 0);\n        }\n\n        if (this.isMsgPack(data)) {\n\n            data.wpos += data.payload.copy(buf, data.wpos, 0);\n        }\n\n        return buf;\n    }\n\n    peekHead(buf) {\n\n        let peek = {};\n        let pos = 0;\n        let mbuf = FPConfig.BUFFER.allocUnsafe(4);\n\n        pos += buf.copy(mbuf, 0, pos, pos + 4);\n        peek.magic = mbuf;\n\n        mbuf = FPConfig.BUFFER.allocUnsafe(1);\n        pos += buf.copy(mbuf, 0, pos, pos + 1);\n        peek.version = FPConfig.FPNN_VERSION.indexOf(mbuf);\n\n        pos += buf.copy(mbuf, 0, pos, pos + 1);\n        peek.flag = FPConfig.FP_FLAG.indexOf(mbuf);\n\n        pos += buf.copy(mbuf, 0, pos, pos + 1);\n        peek.mtype = FPConfig.FP_MESSAGE_TYPE.indexOf(mbuf);\n\n        pos += buf.copy(mbuf, 0, pos, pos + 1);\n        peek.ss = mbuf.readUInt8(0);\n\n        peek.psize = buf.readUInt32LE(pos);\n        peek.wpos = pos + 4;\n        \n        return peek;\n    }\n\n    deCode(buf) {\n\n        let data = this.peekHead(buf);\n\n        if (this.isOneWay(data)) {\n\n            this.deCodeOneWay(buf, data);\n        }\n\n        if (this.isTwoWay(data)) {\n\n            this.deCodeTwoWay(buf, data);\n        }\n\n        if (this.isAnswer(data)) {\n\n            this.deCodeAnswer(buf, data);\n        }\n\n        return data;\n    }\n\n    deCodeOneWay(buf, data) {\n\n        if (buf.length != 12 + data.ss + data.psize) {\n\n            data = null;\n            return;\n        }\n\n        let mbuf = FPConfig.BUFFER.allocUnsafe(data.ss);\n        data.wpos += buf.copy(mbuf, 0, data.wpos, data.wpos + data.ss);\n\n        data.method = mbuf.toString();\n\n        let pbuf = FPConfig.BUFFER.allocUnsafe(data.psize);\n        data.wpos += buf.copy(pbuf, 0, data.wpos);\n\n        if (this.isJson(data)) {\n\n            data.payload = pbuf.toString();\n        }\n\n        if (this.isMsgPack(data)) {\n\n            data.payload = pbuf;\n        }\n    }\n\n    deCodeTwoWay(buf, data) {\n\n        if (buf.length != 16 + data.ss + data.psize) {\n\n            data = null;\n            return;\n        }\n\n        data.seq = buf.readUInt32LE(data.wpos);\n        data.wpos += 4;\n\n        let mbuf = FPConfig.BUFFER.allocUnsafe(data.ss);\n        data.wpos += buf.copy(mbuf, 0, data.wpos, data.wpos + data.ss);\n\n        data.method = mbuf.toString();\n\n        let pbuf = FPConfig.BUFFER.allocUnsafe(data.psize);\n        data.wpos += buf.copy(pbuf, 0, data.wpos);\n\n        if (this.isJson(data)) {\n\n            data.payload = pbuf.toString();\n        }\n\n        if (this.isMsgPack(data)) {\n\n            data.payload = pbuf;\n        }\n    }\n\n    deCodeAnswer(buf, data) {\n\n        if (buf.length != 16 + data.psize) {\n\n            data = null;\n            return;\n        }\n\n        data.seq = buf.readUInt32LE(data.wpos);\n        data.wpos += 4;\n\n        let pbuf = FPConfig.BUFFER.allocUnsafe(data.psize);\n        data.wpos += buf.copy(pbuf, 0, data.wpos);\n\n        if (this.isJson(data)) {\n\n            data.payload = pbuf.toString();\n        }\n\n        if (this.isMsgPack(data)) {\n\n            data.payload = pbuf;\n        }\n    }\n}\n\nfunction buildHeader(data, size) {\n\n    let buf = FPConfig.BUFFER.allocUnsafe(size);\n\n    if (this.isHTTP(data)) {\n\n        data.wpos += FPConfig.HTTP_MAGIC.copy(buf, data.wpos, 0);\n    }\n\n    if (this.isTCP(data)) {\n\n        data.wpos += FPConfig.TCP_MAGIC.copy(buf, data.wpos, 0);\n    }\n\n    data.wpos += FPConfig.FPNN_VERSION.copy(buf, data.wpos, data.version, data.version + 1);\n\n    if (this.isJson(data)) {\n\n        data.wpos += FPConfig.FP_FLAG.copy(buf, data.wpos, data.flag, data.flag + 1);\n    }\n\n    if (this.isMsgPack(data)) {\n\n        data.wpos += FPConfig.FP_FLAG.copy(buf, data.wpos, data.flag, data.flag + 1);\n    }\n\n    data.wpos += FPConfig.FP_MESSAGE_TYPE.copy(buf, data.wpos, data.mtype, data.mtype + 1);\n    return buf;\n}\n\nmodule.exports = FPPackage;","'use strict'\n\nclass BrowserImpl {\n\n\tconstructor() {\n\n\t\tthis._socket = null;\n\t}\n\n\topen(endpoint) {\n\n        let self = this;\n\n\t\ttry {\n\n            this._socket = new WebSocket(endpoint);\n        } catch (err) {\n\n            this.emit('error', err);\n            return;\n        }\n\n        this._socket.binaryType = 'arraybuffer';\n\n        this._socket.onopen = function(evt) { \n\n            self.emit('open');\n        };\n          \n        this._socket.onmessage = function(evt) {\n\n            self.emit('message', evt.data);\n        };\n          \n        this._socket.onclose = function(evt) {\n\n            self.emit('close');\n        };      \n\n        this._socket.onerror = function(evt) {\n\n            self.emit('error', evt);\n        };\n\t}\n\n\tsend(data) {\n\n\t\ttry {\n\n            this._socket.send(data);\n        } catch (err) {\n\n            this.emit('error', err);\n            return;\n        }\n\t}\n\n\tclose() {\n\n\t\tif (this._socket) {\n\n\t\t\tthis._socket.close();\n\t\t}\n\t}\n\n\tget isOpen() {\n\n\t\tif (this._socket) {\n\n\t        return this._socket.readyState == WebSocket.OPEN;\n        }\n\n        return false;\n\t}\n\n\tget isConnecting() {\n\n\t\tif (this._socket) {\n\n\t        return this._socket.readyState == WebSocket.CONNECTING;\n        }\n\n        return false;\n\t}\n}\n\nmodule.exports = BrowserImpl;\n","'use strict'\n\nconst FPConfig = require('./FPConfig');\nconst FPEvent = require('./FPEvent');\nconst PlatFormImpl = require('./platform/BrowserImpl');\n\nclass FPSocket {\n\n    constructor(options) {\n\n        FPEvent.assign(this);\n\n        this._endpoint = options.endpoint || null;\n        this._connectionTimeout = options.connectionTimeout || 10 * 1000;\n        this._platform = options.platformImpl || new PlatFormImpl();\n\n        this._writeID = 0;\n        this._timeoutID = 0;\n        this._queue = [];\n\n        let self = this;\n        FPEvent.assign(this._platform);\n\n        this._platform.on('open', function() {\n\n            onConnect.call(self);\n        });\n\n        this._platform.on('message', function(data) {\n\n            onData.call(self, data);\n        });\n\n        this._platform.on('close', function() {\n\n            onClose.call(self);\n        });\n\n        this._platform.on('error', function(err) {\n\n            onError.call(self, err);\n        });\n    }\n\n    get endpoint() { \n\n        return this._endpoint; \n    }\n\n    write(data) {\n\n        if (data) {\n\n            if (Object.prototype.toString.call(data) === '[object String]') {\n\n                this._queue.push(data);\n            } else {\n\n                let arrayBuffer = data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n                this._queue.push(arrayBuffer);\n            }\n        }\n\n        if (!this._writeID) {\n\n            let self = this;\n            this._writeID = setInterval(function () {\n\n                writeSocket.call(self);\n            }, 0);\n        }\n    }\n\n    close(err) {\n\n        if (err) {\n\n            this.emit('error', err);\n        }\n\n        this._platform.close();\n    }\n\n    open() {\n\n        if (this.isConnecting || this.isOpen || !this._endpoint) {\n\n            this.emit('error', new Error('has connected or worng endpoint!'));\n            return;\n        }\n\n        let self = this;\n\n        this._platform.open(this._endpoint);\n\n        if (this._timeoutID) {\n\n            clearTimeout(this._timeoutID);\n            this._timeoutID = 0;\n        }\n\n        this._timeoutID = setTimeout(function() {\n\n            if (self.isConnecting) {\n\n                self.close(new Error('connect timeout!'));\n            }\n        }, this._connectionTimeout);\n    }\n\n    get isOpen() {\n\n        return this._platform.isOpen;\n    }\n\n    get isConnecting() {\n\n        return this._platform.isConnecting;\n    }\n\n    destroy() {\n\n        this.removeEvent();\n        this.close();\n\n        this._platform.removeEvent();\n        this._platform = null;\n\n        onClose.call(this);\n    }\n}\n\nfunction writeSocket() {\n\n    if (!this.isOpen) {\n\n        return;\n    }\n\n    while (this._queue.length) {\n\n        this._platform.send(this._queue[0]);\n        this._queue.shift();\n    }\n}\n\nfunction onData(chunk) {\n\n    this.emit('data', chunk);\n}\n\nfunction onConnect() {\n    \n    if (this._timeoutID) {\n\n        clearTimeout(this._timeoutID);\n        this._timeoutID = 0;\n    }\n\n    this.emit('connect');\n}\n\nfunction onClose() {\n\n    if (this._writeID) {\n\n        clearInterval(this._writeID);\n        this._writeID = 0;\n    }\n    \n    if (this._timeoutID) {\n\n        clearTimeout(this._timeoutID);\n        this._timeoutID = 0;\n    }\n\n    this.emit('close');\n}\n\nfunction onError(err) {\n\n    this.emit('error', err);\n}\n\nmodule.exports = FPSocket;","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nconst FPConfig = require('./FPConfig');\nconst FPEvent = require('./FPEvent');\nconst FPSocket = require('./FPSocket');\nconst FPPackage = require('./FPPackage');\nconst FPCallback = require('./FPCallback');\nconst FPProcessor = require('./FPProcessor');\n\nclass FPClient {\n\n    constructor(options) {\n\n        FPEvent.assign(this);\n\n        this._autoReconnect = options.autoReconnect || false;\n        this._proxy = options.proxy || null;\n\n        if (this._proxy) {\n            \n            this._proxy.targetEndpoint = options.endpoint;\n            options.endpoint = this._proxy.endpoint;\n        }\n\n        this._conn = new FPSocket(options);\n\n        let self = this;\n\n        this._conn.on('connect', function() {\n\n            onConnect.call(self);\n        });\n\n        this._conn.on('close', function() {\n\n            onClose.call(self);\n        });\n\n        this._conn.on('data', function(chunk) {\n\n            onData.call(self, chunk);\n        });\n\n        this._conn.on('error', function(err) {\n\n            onError.call(self, err);\n        });\n\n        this._pkg = new FPPackage();\n        this._cbs = new FPCallback();\n        this._psr = new FPProcessor();\n\n        this._seq = 0;\n        this._wpos = 0;\n        this._peekData = null;\n\n        this._readID = 0;\n        this._reconnectID = 0;\n        this._buffer = FPConfig.BUFFER.allocUnsafe(FPConfig.READ_BUFFER_LEN);\n    }\n\n    get processor() {\n\n        return this._psr;\n    }\n\n    set processor(value) {\n\n        return this._psr = value;\n    }\n\n    connect() {\n\n        if (this.hasConnect) {\n\n            this._conn.close(new Error('has connected!'));\n            return;\n        }\n\n        this._conn.open();\n    }\n\n    sendQuest(options, callback, timeout) {\n\n        let data = {};\n\n        data.magic = options.magic || FPConfig.TCP_MAGIC;\n        data.version = options.version || 1;\n        data.flag = options.flag || 0;\n        data.mtype = options.hasOwnProperty('mtype') ? options.mtype : 1;\n\n        data.method = options.method;\n        data.seq = (!options.hasOwnProperty('seq')) ? ++this._seq : options.seq;\n        data.payload = options.payload;\n\n        data = this._pkg.buildPkgData(data);\n\n        if (callback) {\n\n            this._cbs.addCb(this._pkg.cbKey(data), callback, timeout);\n        }\n\n        let buf = this._pkg.enCode(data);\n\n        if (this._proxy) {\n\n            buf = this._proxy.buildProxyData(buf);\n        }\n\n        this._conn.write(buf);\n    }\n\n    sendNotify(options) {\n\n        let data = {};\n\n        data.magic = options.magic || FPConfig.TCP_MAGIC;\n        data.version = options.version || 1;\n        data.flag = options.flag || 0;\n        data.mtype = options.mtype || 0;\n\n        data.method = options.method;\n        data.payload = options.payload;\n\n        data = this._pkg.buildPkgData(data);\n        let buf = this._pkg.enCode(data);\n\n        if (this._proxy) {\n\n            buf = this._proxy.buildProxyData(buf);\n        }\n\n        this._conn.write(buf);\n    }\n\n    close(err) {\n\n        if (err) {\n\n            onError.call(this, err);\n        }\n\n        this._conn.close();\n    }\n\n    get isOpen() {\n\n        return this._conn.isOpen;\n    }\n\n    get hasConnect() {\n\n        return this._conn.isOpen || this._conn.isConnecting;\n    }\n\n    destroy() {\n\n        this._autoReconnect = false;\n\n        this.removeEvent();\n\n        this._psr.destroy();\n        this._conn.destroy();\n        \n        onClose.call(this);\n    }\n}\n\nfunction onError(err) {\n    \n    this.emit('error', err);\n}\n\nfunction onConnect() {\n\n    if (this._reconnectID) {\n\n        clearTimeout(this._reconnectID);\n        this._reconnectID = 0;\n    }\n\n    this.emit('connect');\n}\n\nfunction onClose() {\n\n    if (this._readID) {\n\n        clearInterval(this._readID);\n        this._readID = 0;\n    }\n\n    if (this._reconnectID) {\n\n        clearTimeout(this._reconnectID);\n        this._reconnectID = 0;\n    }\n\n    this._seq = 0;\n    this._wpos = 0;\n    this._peekData = null;\n\n    this._cbs.removeCb();\n    this._buffer = FPConfig.BUFFER.allocUnsafe(FPConfig.READ_BUFFER_LEN);\n\n    this.emit('close');\n\n    if (this._autoReconnect) {\n\n        reConnect.call(this);\n    }\n}\n\nfunction reConnect() {\n\n    if (this._reconnectID) {\n\n        return;\n    }\n\n    let self = this;\n\n    this._reconnectID = setTimeout(function() {\n\n        self.connect();\n    }, 100);\n}\n\nfunction onData(chunk) {\n\n    chunk = FPConfig.BUFFER.from(chunk);\n\n    let len = this._wpos + chunk.length;\n\n    if (len > this._buffer.length) {\n\n        resizeBuffer.call(this, len, 2 * FPConfig.READ_BUFFER_LEN);\n    }\n\n    this._wpos += chunk.copy(this._buffer, this._wpos, 0);\n\n    if (!this._readID) {\n\n        let self = this;\n        this._readID = setInterval(function () {\n\n            readPeekData.call(self);\n        }, 0);\n    }\n}\n\nfunction resizeBuffer(len1, len2, offset=0) {\n\n    let len = Math.max(len1, len2);\n\n    let buf = FPConfig.BUFFER.allocUnsafe(len);\n    this._wpos = this._buffer.copy(buf, 0, offset, this._wpos);\n    this._buffer = buf;\n}\n\nfunction readPeekData () {\n\n    if (this._wpos < 12) {\n\n        return;\n    }\n\n    if (!this._peekData) {\n\n        this._peekData = peekHead.call(this, this._buffer);\n\n        if (!this._peekData) {\n\n            this.conn.close(new Error('worng package!'));\n            return;\n        }\n    }\n    \n    let diff = this._wpos - this._peekData.pkgLen;\n\n    if (diff < 0) {\n\n        return;\n    }\n\n    this._buffer.copy(this._peekData.buffer, 0, 0, this._peekData.pkgLen);\n\n    let data = this._pkg.deCode(this._peekData.buffer);\n\n    resizeBuffer.call(this, 2 * diff, FPConfig.READ_BUFFER_LEN, this._peekData.pkgLen);\n    delete this._peekData;\n    this._peekData = null;\n\n    if (this._pkg.isAnswer(data)) {\n\n        let cbkey = this._pkg.cbKey(data);\n        this._cbs.execCb(cbkey, data);\n    }\n\n    if (this._pkg.isQuest(data)) {\n\n        let self = this;\n        this._psr.service(data, function(payload, exception) {\n\n            sendAnswer.call(self, data.flag, data.seq, payload, exception);\n        });\n    }\n}\n\nfunction sendAnswer(flag, seq, payload, exception) {\n\n    exception = exception || false;\n\n    let options = {\n        flag: flag,\n        mtype: 2,\n        seq: seq,\n        ss: exception ? 1 : 0,\n        payload: payload,\n    };\n\n    this.sendQuest(options);\n}\n\nfunction peekHead(buf) {\n\n    let data = null;\n\n    if (buf.length >= 12) {\n\n        data = this._pkg.peekHead(buf);\n\n        if (!checkHead.call(this, data)) {\n\n            return null;\n        }\n\n        if (this._pkg.isOneWay(data)) {\n\n            data.pkgLen = 12 + data.ss + data.psize;\n        }\n\n        if (this._pkg.isTwoWay(data)) {\n\n            data.pkgLen = 16 + data.ss + data.psize;\n        }\n\n        if (this._pkg.isAnswer(data)) {\n\n            data.pkgLen = 16 + data.psize;\n        }\n\n        if (data.pkgLen > 0) {\n\n            data.buffer = FPConfig.BUFFER.allocUnsafe(data.pkgLen);\n        }\n    }\n\n    return data;\n}\n\nfunction checkHead(data) {\n\n    if (!FPConfig.TCP_MAGIC.equals(data.magic) && !FPConfig.HTTP_MAGIC.equals(data.magic)) {\n\n        return false;\n    }\n\n    if (data.version < 0 || data.version >= FPConfig.FPNN_VERSION.length) {\n\n        return false;\n    }\n\n    if (data.flag < 0 || data.flag >= FPConfig.FP_FLAG.length) {\n\n        return false;\n    }\n    \n    if (data.mtype < 0 || data.mtype >= FPConfig.FP_MESSAGE_TYPE.length) {\n\n        return false;\n    }\n\n    return true;\n}\n\nmodule.exports = FPClient;"],"sourceRoot":""}